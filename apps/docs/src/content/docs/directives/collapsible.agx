---
title: Collapsible
description: Set of Angular directives to build a Collapsible using Vacui UI primitives.
group: Directives
slug: collapsible
---

<script lang="ts">
import { CodeHighlightComponent } from '../../../app/components/code/code.component' with { analog: 'imports' };
import { AnatomyComponent } from '../../../app/components/anatomy/anatomy.component' with { analog: 'imports' };
import { BadgeComponent } from '../../../app/components/badge/badge.component' with { analog: 'imports' };
import { TableComponent } from '../../../app/components/table/table.component' with { analog: 'imports' };
import { ExampleComponent } from '../../../app/components/example/example.component' with { analog: 'imports' };

// ------ ANATOMY ------
const componentStructure = {
  name: 'vacCollapsibleRoot',
  children: [
    { name: 'vacCollapsibleTrigger' },
    { name: 'vacCollapsibleContent' },
  ]
};

// ------ COLUMNS ------
const columnsInput = [
  { header: 'Input', field: 'prop' },
  { header: 'Default', field: 'default' },
  { header: 'Type', field: 'type' },
  { header: 'Required', field: 'required' }
];

const outputColumns = [
  { header: 'Output', field: 'prop' },
  { header: 'Description', field: 'description' },
  { header: 'Returns', field: 'returns', widthFactor: 2  },
];

const attributesColumns = [
  { header: 'Attribute', field: 'attribute' },
  { header: 'Value', field: 'value', widthFactor: 3 },
];

const totalColumns = 4;

// ------ ROOT ROW INPUTS ------
const rootInputRows = [
  { id: 1, prop: 'open', default: 'false', type: 'boolean', required: 'false' },
  { id: 2, prop: 'disabled', default: 'false', type: 'boolean', required: 'false' },
];

const rootOutputRows = [
  { id: 1, prop: 'openChange', description: 'Event handler emitted when the state of the collapsible changes', returns: 'boolean' },
];

const rootAttrRows = [
  { id: 1, attribute: 'data-state', value: '"open" | "closed"' },
  { id: 2, attribute: 'data-disabled', value: 'Shows when disabled' },
];

// ------ ROWS TRIGGER ------
const triggerAttrRows = [
  { id: 1, attribute: 'data-state', value: '"open" | "closed"' },
  { id: 2, attribute: 'data-disabled', value: 'Shows when disabled' },
];

// ------ ROWS CONTENT ------
const contentAttrRows = [
  { id: 1, attribute: 'data-state', value: '"open" | "closed"' },
  { id: 2, attribute: 'data-disabled', value: 'Shows when disabled' },
];


// ------- STATE ------
const stateVarsColumns = [
  { header: 'Name', field: 'name' },
  { header: 'Default', field: 'default' },
  { header: 'Type', field: 'type', widthFactor: 2 },
];

const stateMethodsColumns = [
  { header: 'Method', field: 'method' },
  { header: 'Arguments', field: 'arguments' },
  { header: 'Return', field: 'return', widthFactor: 2 },
];

const stateRows = [
  { id: 1, name: 'open', default: 'false', type: 'WritableSignal<boolean>' },
  { id: 2, name: 'disabled', default: 'false', type: 'WritableSignal<boolean>' },
];

const stateMethodRows = [
  { id: 1, method: 'toggleOpen', arguments: 'â€”', return: 'void' },
];

const stateExample = `
<div vacCollapsibleRoot #root="vacCollapsibleRoot">
  <button vacCollapsibleTrigger>BTN</button>
  @if (root.state.open()) {
    <div vacCollapsibleContent>CONTENT</div>
  }
</div>
`

// ------ KEYBOARD ------
const keyboardColumns = [
  { header: 'Key', field: 'key' },
  { header: 'Description', field: 'description', widthFactor: 3 },
];

const keyboardRows = [
  { key: 'Space', description: 'Toggle the collapsible state.' },
  { key: 'Enter', description: 'Toggle the collapsible state.' },
];
</script>

<template lang="md">

  A toolkit of Angular directives designed to construct a fully customizable accordion, enabling developers to define interactive, collapsible content areas tailored to specific application needs.

  <docs-example name="collapsible" />

  ## Installation
  Add and import the module into your imports section.

  ### Module
  <docs-code code="import { CollapsiblePrimitivesModule } from '@vacui-kit/primitives/collapsible';" language="ts" />

  ### Standalone directives
  <docs-code code="import { CollapsibleRootDirective, CollapsibleTriggerDirective, CollapsibleContentDirective } from '@vacui-kit/primitives/collapsible';" language="ts" />

  # Anatomy
  Directive's set structure.

  <docs-anatomy [node]="componentStructure" />

  # Input props

  ## CollapsibleRoot <docs-badge color="purple" text="Attribute Directive" />
  The root directive for the collapsible. Handles the state and bindings.

  <div class="mt-4">
    <docs-table [columns]="columnsInput" [rows]="rootInputRows" />
  </div>
  
  <div class="mt-4">
    <docs-table [columns]="outputColumns" [rows]="rootOutputRows" />
  </div>

  <docs-table [columns]="attributesColumns" [rows]="rootAttrRows" />

  ## CollapsibleTrigger <docs-badge color="purple" text="Attribute Directive" />
  A directive to bind the state and the accessibility rules to the trigger element.

  <docs-table [columns]="attributeColumns" [rows]="triggerAttrRows" />

  ## CollapsibleContent <docs-badge color="purple" text="Attribute Directive" />
  A directive to bind the state and the accessibility rules to the content element. To hide the content, you can use an `@if` or hide it with css like in the previous example. If you didn't set a state, you can access the `open` state with `directive.state.open()`. You can find an example in the state section.

  <docs-table [columns]="attributesColumns" [rows]="contentAttrRows" />

  # State
  `CollapsibleStateService` allows to control the inputs and toggle of the collapsible.

  ## Access directive API with exportAS
  We can access the state of the collapsible using a template variable. All the directives expose themself with the same name. We have access to the directive's attributes and also the `state` service.

  ### Example
  We could use it with any other directive. For example with `#root="vacCollapsibleRoot"` and access the state.

  <docs-code [code]="stateExample" language="html" />

  ## State API - CollapsibleStateService
  Documentation for the collapsible state service API.

  ### Variables
  <docs-table [columns]="stateVarsColumns" [rows]="stateRows" />

  ### Methods
  <docs-table [columns]="stateMethodsColumns" [rows]="stateMethodRows" />

  # Accessibility
  This collapsible set of directives is designed in accordance with the WAI-ARIA Authoring Practices Guide. For more details on accessibility features and guidelines, please refer to the [WAI-ARIA Collapsible Practices](https://www.w3.org/WAI/ARIA/apg/patterns/disclosure/). This ensures our component meets modern accessibility standards, providing an inclusive user experience.

  ## Keyboard Navigation
  When we focus the trigger directive `vacCollapsibleTrigger` we can toggle it.

  <docs-table [columns]="keyboardColumns" [rows]="keyboardRows" />
</template>
